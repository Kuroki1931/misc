[{"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/index.js":"1","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/App.js":"2","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/reportWebVitals.js":"3","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Login.js":"4","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Main.js":"5","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Footer.js":"6","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Header.js":"7","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/context/ApiContext.js":"8","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Window.js":"9","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Detail.js":"10","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/WindowRe.js":"11"},{"size":873,"mtime":1610724772123,"results":"12","hashOfConfig":"13"},{"size":584,"mtime":1611321785476,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610542261642,"results":"15","hashOfConfig":"13"},{"size":6355,"mtime":1610724765073,"results":"16","hashOfConfig":"13"},{"size":2060,"mtime":1611321786202,"results":"17","hashOfConfig":"13"},{"size":553,"mtime":1610901453078,"results":"18","hashOfConfig":"13"},{"size":1185,"mtime":1610905399320,"results":"19","hashOfConfig":"13"},{"size":3801,"mtime":1611322746150,"results":"20","hashOfConfig":"13"},{"size":1827,"mtime":1610904912671,"results":"21","hashOfConfig":"13"},{"size":778,"mtime":1611321784747,"results":"22","hashOfConfig":"13"},{"size":1706,"mtime":1611321838365,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zdbu6v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/index.js",[],["48","49"],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/App.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/reportWebVitals.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Login.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Main.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Footer.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Header.js",[],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/context/ApiContext.js",["50"],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Window.js",["51"],"import React, { useState, useContext } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Modal from \"react-modal\";\r\nimport { ApiContext}  from \"../context/ApiContext\";\r\n\r\nconst Window = () => {\r\n  Modal.setAppElement('#root')\r\n  const { createMemo, editedMemo, setEditedMemo, setCover, modalIsOpen, setModalIsOpen } = useContext(ApiContext);\r\n  const handleInputChange = () => (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    setEditedMemo({ ...editedMemo, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <button onClick={() => setModalIsOpen(true)}\r\n              style={{ marginLeft: '80%',\r\n                       marginTop: '10px',\r\n                       background: 'transparent',\r\n                       border: 'none',\r\n                    }}>\r\n        <AddCircleOutlineIcon style={{ fontSize: '100px'}}/>\r\n      </button>\r\n      <Modal isOpen={modalIsOpen} onRequestClose={()=> setModalIsOpen(false)}>\r\n        <p>Title</p>\r\n        <input type='text' value={editedMemo.title} name='title' onChange={handleInputChange()}/>\r\n        <p>Picture</p>\r\n        <input\r\n            type=\"file\"\r\n            id=\"imageInput\"\r\n            onChange={(event) => {\r\n                setCover(event.target.files[0]);\r\n                event.target.value = \"\";\r\n            }}\r\n        />\r\n        <p>Memo</p>\r\n        <textarea name=\"memo\" value={editedMemo.memo} cols=\"80\" rows=\"50\" wrap=\"hard\" onChange={handleInputChange()}/>\r\n        {editedMemo.title && editedMemo.memo ? (\r\n          <button onClick={() => createMemo()}>\r\n            Create\r\n          </button>\r\n        ) : (\r\n          <button disabled>\r\n            Create\r\n          </button>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Window\r\n","/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/Detail.js",["52"],"/mnt/c/Users/kurokiso/Desktop/studyweb/webreact/src/component/WindowRe.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":53,"nodeType":"60","messageId":"61","endLine":1,"endColumn":57},{"ruleId":"58","severity":1,"message":"62","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":18,"column":21,"nodeType":"65","endLine":18,"endColumn":76},{"ruleId":"58","severity":1,"message":"62","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]