[{"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/index.js":"1","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/App.js":"2","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/reportWebVitals.js":"3","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Login.js":"4","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Main.js":"5","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Navbar.js":"6","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/actionTypes.js":"7","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/context/ApiContext.js":"8","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Profile.js":"9","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/InboxDM.js":"10","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/ProfileManager.js":"11","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Ask.js":"12"},{"size":906,"mtime":1609667953772,"results":"13","hashOfConfig":"14"},{"size":352,"mtime":1609667956173,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609257747514,"results":"16","hashOfConfig":"14"},{"size":5576,"mtime":1609678539710,"results":"17","hashOfConfig":"14"},{"size":2235,"mtime":1609681620147,"results":"18","hashOfConfig":"14"},{"size":1109,"mtime":1609678537718,"results":"19","hashOfConfig":"14"},{"size":216,"mtime":1609678541480,"results":"20","hashOfConfig":"14"},{"size":7004,"mtime":1609676902845,"results":"21","hashOfConfig":"14"},{"size":1512,"mtime":1609678543322,"results":"22","hashOfConfig":"14"},{"size":382,"mtime":1609678540702,"results":"23","hashOfConfig":"14"},{"size":2696,"mtime":1609680381164,"results":"24","hashOfConfig":"14"},{"size":1966,"mtime":1609681827976,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1t295vt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/index.js",["56"],"import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport Login from './components/Login'\nimport reportWebVitals from './reportWebVitals';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie'\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n        <CookiesProvider>\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route exact path='/main' component={App} />\n          </Switch>\n        </CookiesProvider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["57","58"],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/App.js",[],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/reportWebVitals.js",[],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Login.js",["59","60","61"],"import React, { useState, useReducer } from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport axios from 'axios'\r\nimport Main from './Main'\r\nimport { Switch } from 'react-router-dom'\r\nimport {\r\n    START_FETCH,\r\n    FETCH_SUCCESS,\r\n    ERROR_CATCHED,\r\n    INPUT_EDIT,\r\n    TOGGLE_MODE,\r\n  } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    isLoginView: true,\r\n    error: \"\",\r\n    credentialsLog: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    credentialsReg: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n  \r\n  const loginReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case START_FETCH: {\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n      }\r\n      case FETCH_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n        };\r\n      }\r\n      case ERROR_CATCHED: {\r\n        return {\r\n          ...state,\r\n          error: \"Email or password is not correct!\",\r\n          isLoading: false,\r\n        };\r\n      }\r\n      case INPUT_EDIT: {\r\n        return {\r\n          ...state,\r\n          [action.inputName]: action.payload,\r\n          error: \"\",\r\n        };\r\n      }\r\n      case TOGGLE_MODE: {\r\n        return {\r\n          ...state,\r\n          isLoginView: !state.isLoginView,\r\n        };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  const Login = (props) => {\r\n    const [state, dispatch] = useReducer(loginReducer, initialState);\r\n  \r\n    const inputChangedLog = () => (event) => {\r\n      const cred = state.credentialsLog;\r\n      cred[event.target.name] = event.target.value;\r\n      dispatch({\r\n        type: INPUT_EDIT,\r\n        inputName: \"state.credentialLog\",\r\n        payload: cred,\r\n      });\r\n    };\r\n  \r\n    const inputChangedReg = () => (event) => {\r\n      const cred = state.credentialsReg;\r\n      cred[event.target.name] = event.target.value;\r\n      dispatch({\r\n        type: INPUT_EDIT,\r\n        inputName: \"state.credentialReg\",\r\n        payload: cred,\r\n      });\r\n    };\r\n  \r\n    const login = async (event) => {\r\n      event.preventDefault();\r\n      if (state.isLoginView) {\r\n        try {\r\n          dispatch({ type: START_FETCH });\r\n          const res = await axios.post(\r\n            \"http://127.0.0.1:8000/authen/\",\r\n            state.credentialsLog,\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n            }\r\n          );\r\n          props.cookies.set(\"current-token\", res.data.token);\r\n          res.data.token\r\n            ? (window.location.href = \"/main\")\r\n            : (window.location.href = \"/\");\r\n          dispatch({ type: FETCH_SUCCESS });\r\n        } catch {\r\n          dispatch({ type: ERROR_CATCHED });\r\n        }\r\n      } else {\r\n        try {\r\n          dispatch({ type: START_FETCH });\r\n          await axios.post(\r\n            \"http://127.0.0.1:8000/user/create/\",\r\n            state.credentialsReg,\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n            }\r\n          );\r\n          dispatch({ type: FETCH_SUCCESS });\r\n          dispatch({ type: TOGGLE_MODE });\r\n        } catch {\r\n          dispatch({ type: ERROR_CATCHED });\r\n        }\r\n      }\r\n    };\r\n  \r\n    const toggleView = () => {\r\n      dispatch({ type: TOGGLE_MODE });\r\n    };\r\n  \r\n    return (\r\n        <form onSubmit={login}>\r\n          <div>\r\n            <div>\r\n              {state.isLoginView ? \"Login\" : \"Register\"}\r\n            </div>\r\n           \r\n            <div>Email</div>\r\n            {state.isLoginView ? (\r\n              <input\r\n                name=\"username\"\r\n                value={state.credentialsLog.username}\r\n                onChange={inputChangedLog()}\r\n              />\r\n            ) : (\r\n              <input\r\n                name=\"email\"\r\n                value={state.credentialsReg.email}\r\n                onChange={inputChangedReg()}\r\n              />\r\n            )}\r\n\r\n            <br/>\r\n           \r\n            <div>password</div>\r\n            {state.isLoginView ? (\r\n              <input\r\n                name=\"password\"\r\n                value={state.credentialsLog.password}\r\n                onChange={inputChangedLog()}\r\n              />\r\n            ) : (\r\n              <input\r\n                name=\"password\"\r\n                value={state.credentialsReg.password}\r\n                onChange={inputChangedReg()}\r\n              />\r\n            )}\r\n            <span>{state.error}</span>\r\n\r\n            <br/>\r\n  \r\n            {state.isLoginView ? (\r\n              !state.credentialsLog.password || !state.credentialsLog.username ? (\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled\r\n                >\r\n                  Login\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </button>\r\n              )\r\n            ) : !state.credentialsReg.password || !state.credentialsReg.email ? (\r\n              <button\r\n                type=\"submit\"\r\n                disabled\r\n              >\r\n                Register\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </button>\r\n            )}\r\n\r\n            <br/>\r\n\r\n            <button onClick={() => toggleView()}>\r\n              {state.isLoginView ? \"Create Accout ?\" : \"Back to login ?\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n    );\r\n  };\r\n  \r\n  export default withCookies(Login);\r\n  ","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Main.js",["62"],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Navbar.js",["63"],"import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nconst Navbar = (props) => {\r\n    const Logout = () => event => {\r\n        props.cookies.remove('current-token');\r\n        window.location.href = '/';\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <container>\r\n                <img \r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/1200px-Instagram_logo_2016.svg.png'\r\n                alt='no-image'\r\n                style={{ width:'2%' }}\r\n                className={classes.inline}\r\n                />\r\n                <h3 \r\n                  className={classes.inline}\r\n                  style={{ margin:'0 0 0 35vw' }}\r\n                >\r\n                    Kuroki's SNS\r\n                </h3>\r\n                <button \r\n                  className={classes.inline}\r\n                  style={{ margin:'0 0 0 35vw' }}\r\n                  onClick={Logout()}>Logout</button>\r\n            </container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withCookies(Navbar)\r\n","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/actionTypes.js",[],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/context/ApiContext.js",[],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Profile.js",["64","65"],"import React, { useContext } from 'react'\r\nimport { ApiContext } from \"../context/ApiContext\";\r\n\r\n\r\nconst Profile = ({profileData, askData}) => {\r\n    const { newRequestFriend, profile } = useContext(ApiContext)\r\n\r\n    const newRequest = () => {\r\n        const askUploadData = new FormData();\r\n        askUploadData.append('askTo', profileData.userPro)\r\n        newRequestFriend(askUploadData)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {profileData.img ? (\r\n                <img src={profileData.img} width=\"15%\" />\r\n            ) : (\r\n                <img\r\n                    src=\"https://www.google.com/search?q=no+image&rlz=1C1QABZ_jaJP901JP901&tbm=isch&source=iu&ictx=1&fir=FZXKCHY0sdAZeM%252CUGLRiMygoEPsCM%252C_&vet=1&usg=AI4_-kRoQgqBF2GJmTtdsrRPaLXsvbv85w&sa=X&ved=2ahUKEwiHt6zkkv_tAhXVMN4KHdOZChAQ9QF6BAgPEAE#imgrc=FZXKCHY0sdAZeM\"\r\n                />\r\n            )}\r\n            <div>{profileData.nickName}</div>\r\n            <div>{profileData.created_on}</div>\r\n\r\n            <container>\r\n                {!askData[0] && profile.id ? (\r\n                    <button\r\n                      onClick={() => newRequest()}\r\n                    >\r\n                        Ask as friend\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                      disabled\r\n                    >\r\n                        Ask as friend\r\n                    </button>\r\n                )}\r\n            </container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/InboxDM.js",[],"/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/ProfileManager.js",["66","67"],"import React, { useContext } from 'react'\r\nimport { ApiContext } from \"../context/ApiContext\";\r\n\r\nconst ProfileManager = () => {\r\n    const {\r\n        profile,\r\n        editedProfile,\r\n        setEditedProfile,\r\n        deleteProfile,\r\n        cover,\r\n        setCover,\r\n        createProfile,\r\n        editProfile,\r\n    } = useContext(ApiContext)\r\n\r\n    const handleInputChange = () => (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        setEditedProfile({ ...editedProfile, [name]: value });\r\n      };\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>My Profile</h1>\r\n            <div>\r\n                {profile.id ? (\r\n                    <img src={profile.img} width=\"15%\" />\r\n                ) : (\r\n                    <img\r\n                        src=\"https://www.google.com/search?q=no+image&rlz=1C1QABZ_jaJP901JP901&tbm=isch&source=iu&ictx=1&fir=FZXKCHY0sdAZeM%252CUGLRiMygoEPsCM%252C_&vet=1&usg=AI4_-kRoQgqBF2GJmTtdsrRPaLXsvbv85w&sa=X&ved=2ahUKEwiHt6zkkv_tAhXVMN4KHdOZChAQ9QF6BAgPEAE#imgrc=FZXKCHY0sdAZeM\"\r\n                    />\r\n                )}\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"imageInput\"\r\n                    onChange={(event) => {\r\n                        setCover(event.target.files[0]);\r\n                        event.target.value = \"\";\r\n                    }}\r\n                />\r\n            </div>\r\n            \r\n            {editedProfile.id ? (\r\n                editedProfile.nickName ? (\r\n                <button onClick={() => editProfile()}>\r\n                    editprofile\r\n                </button>\r\n                ) : (\r\n                <button disabled>\r\n                    editprofile\r\n                </button>\r\n                )\r\n            ) : editedProfile.nickName && cover.name ? (\r\n                <button onClick={() => createProfile()}>\r\n                create\r\n                </button>\r\n            ) : (\r\n                <button disabled>\r\n                create\r\n                </button>\r\n            )}\r\n            <button onClick={() => deleteProfile()}>\r\n                trash\r\n            </button>\r\n            <div>\r\n                {profile && <span>{profile.nickName}</span>}\r\n                <hr />\r\n                <input\r\n                type=\"text\"\r\n                value={editedProfile.nickName}\r\n                name=\"nickName\"\r\n                onChange={handleInputChange()}\r\n                />\r\n                <hr />\r\n                <span>Joined at {profile.created_on} </span>\r\n                <hr />\r\n                <span>JAPAN</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileManager\r\n","/mnt/c/Users/kurokiso/Desktop/SNS/myself/sns/src/components/Ask.js",[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":30},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"77","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":12},{"ruleId":"68","severity":1,"message":"78","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":16},{"ruleId":"68","severity":1,"message":"79","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":16,"column":17,"nodeType":"82","endLine":21,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":18,"column":17,"nodeType":"82","endLine":18,"endColumn":58},{"ruleId":"83","severity":1,"message":"84","line":20,"column":17,"nodeType":"82","endLine":22,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":29,"column":21,"nodeType":"82","endLine":29,"endColumn":58},{"ruleId":"83","severity":1,"message":"84","line":31,"column":21,"nodeType":"82","endLine":33,"endColumn":23},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'useState' is defined but never used.","'Main' is defined but never used.","'Switch' is defined but never used.","'Inbox' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]