{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst apiUrl = \"http://localhost:8000/\";\nexport const fetchAsyncAsk_listGet = createAsyncThunk(\"ask_list/get\", async token => {\n  const res = await axios.get(`${apiUrl}api/ask/`, {\n    headers: {\n      Authorization: `JWT ${token}`\n    }\n  });\n  return res.data;\n});\nexport const fetchAsyncQuestion_listGet = createAsyncThunk(\"question_list/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/question/`, {\n    headers: {}\n  });\n  return res.data;\n});\nconst questionSlice = createSlice({\n  name: 'question_box',\n  initialState: {\n    question_list: [{\n      id: '',\n      title: '',\n      question: '',\n      regist_date: ''\n    }],\n    ask_list: [{\n      id: '',\n      askto: '',\n      ask: '',\n      regist_date: ''\n    }]\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAsyncAsk_listGet.fulfilled, (state, action) => {\n      state.ask_list = action.payload;\n    });\n    builder.addCase(fetchAsyncQuestion_listGet.fulfilled, (state, action) => {\n      state.question_list = action.payload;\n    });\n  }\n});\nexport const {} = questionSlice.actions;\nexport const selectAsk_list = state => state.question_box.ask_list;\nexport const selectQuestion_list = state => state.question_box.question_list;\nexport default questionSlice.reducer;","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/question_box/question_boxSlice.js"],"names":["createSlice","createAsyncThunk","axios","apiUrl","fetchAsyncAsk_listGet","token","res","get","headers","Authorization","data","fetchAsyncQuestion_listGet","questionSlice","name","initialState","question_list","id","title","question","regist_date","ask_list","askto","ask","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","actions","selectAsk_list","question_box","selectQuestion_list","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,wBAAf;AAEA,OAAO,MAAMC,qBAAqB,GAAGH,gBAAgB,CAAC,cAAD,EAAiB,MAAOI,KAAP,IAAiB;AACnF,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,MAAO,UAApB,EAA+B;AAC/CK,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,OAAMJ,KAAM;AADrB;AADsC,GAA/B,CAAlB;AAKA,SAAOC,GAAG,CAACI,IAAX;AACH,CAPoD,CAA9C;AASP,OAAO,MAAMC,0BAA0B,GAAGV,gBAAgB,CAAC,mBAAD,EAAsB,YAAY;AAC1F,QAAMK,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,MAAO,eAApB,EAAoC;AACpDK,IAAAA,OAAO,EAAE;AAD2C,GAApC,CAAlB;AAIA,SAAOF,GAAG,CAACI,IAAX;AACD,CANyD,CAAnD;AASP,MAAME,aAAa,GAAGZ,WAAW,CAAC;AAC9Ba,EAAAA,IAAI,EAAE,cADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,aAAa,EAAE,CACX;AACIC,MAAAA,EAAE,EAAE,EADR;AAEIC,MAAAA,KAAK,EAAE,EAFX;AAGIC,MAAAA,QAAQ,EAAE,EAHd;AAIIC,MAAAA,WAAW,EAAE;AAJjB,KADW,CADL;AASVC,IAAAA,QAAQ,EAAE,CACR;AACIJ,MAAAA,EAAE,EAAE,EADR;AAEIK,MAAAA,KAAK,EAAE,EAFX;AAGIC,MAAAA,GAAG,EAAE,EAHT;AAIIH,MAAAA,WAAW,EAAE;AAJjB,KADQ;AATA,GAFgB;AAqB9BI,EAAAA,QAAQ,EAAE,EArBoB;AAwB9BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBtB,qBAAqB,CAACuB,SAAtC,EAAiD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClED,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACD,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBf,0BAA0B,CAACgB,SAA3C,EAAsD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvED,MAAAA,KAAK,CAACb,aAAN,GAAsBc,MAAM,CAACC,OAA7B;AACD,KAFD;AAGH;AA/B6B,CAAD,CAAjC;AAkCA,OAAO,MAAM,KAAKlB,aAAa,CAACmB,OAAzB;AACP,OAAO,MAAMC,cAAc,GAAIJ,KAAD,IAAWA,KAAK,CAACK,YAAN,CAAmBb,QAArD;AACP,OAAO,MAAMc,mBAAmB,GAAIN,KAAD,IAAWA,KAAK,CAACK,YAAN,CAAmBlB,aAA1D;AAEP,eAAeH,aAAa,CAACuB,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst apiUrl = \"http://localhost:8000/\";\n\nexport const fetchAsyncAsk_listGet = createAsyncThunk(\"ask_list/get\", async (token) => {\n    const res = await axios.get(`${apiUrl}api/ask/`, {\n      headers: {\n        Authorization: `JWT ${token}`,\n      },\n    });\n    return res.data;\n});\n\nexport const fetchAsyncQuestion_listGet = createAsyncThunk(\"question_list/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/question/`, {\n    headers: {\n    },\n  });\n  return res.data;\n});\n\n\nconst questionSlice = createSlice({\n    name: 'question_box',\n    initialState: {\n        question_list: [\n            {\n                id: '',\n                title: '',\n                question: '',\n                regist_date: '',\n            },\n        ],\n        ask_list: [\n          {\n              id: '',\n              askto: '',\n              ask: '',\n              regist_date: '',\n              \n          },   \n        ],\n    },\n    reducers: {\n      \n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchAsyncAsk_listGet.fulfilled, (state, action) => {\n          state.ask_list = action.payload;\n        });\n        builder.addCase(fetchAsyncQuestion_listGet.fulfilled, (state, action) => {\n          state.question_list = action.payload;\n        });\n    },\n})\n\nexport const {} = questionSlice.actions;\nexport const selectAsk_list = (state) => state.question_box.ask_list;\nexport const selectQuestion_list = (state) => state.question_box.question_list;\n\nexport default questionSlice.reducer;\n\n\n"]},"metadata":{},"sourceType":"module"}