{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Tabletop from 'tabletop';\nexport const getSpredSheet = createAsyncThunk(\"company/get\", async () => {\n  const res = Tabletop.init({\n    key: '1iQhGbFVfEGXLVzrsbxKi-SwVsXkDWI_XyrrFok8rTdk'\n  }).then(data => {\n    return data;\n  });\n  return res;\n});\nconst companySlice = createSlice({\n  name: 'company',\n  initialState: {},\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getSpredSheet.fulfilled, (state, action) => {\n      state.sheet = action.payload;\n    });\n  }\n});\nexport const {} = companySlice.actions;\nexport const selectSheet = state => state.company.sheet;\nexport default companySlice.reducer;","map":{"version":3,"sources":["/Users/kurokiso/Desktop/UT_Money/company_page/src/features/company/companySlice.js"],"names":["createSlice","createAsyncThunk","Tabletop","getSpredSheet","res","init","key","then","data","companySlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","sheet","payload","actions","selectSheet","company","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,aAAD,EAAgB,YAAW;AACpE,QAAMG,GAAG,GAAGF,QAAQ,CAACG,IAAT,CAAc;AACtBC,IAAAA,GAAG,EAAE;AADiB,GAAd,EAGXC,IAHW,CAGLC,IAAD,IAAU;AACZ,WAAOA,IAAP;AACH,GALW,CAAZ;AAMA,SAAOJ,GAAP;AACH,CAR4C,CAAtC;AAUP,MAAMK,YAAY,GAAGT,WAAW,CAAC;AAC7BU,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAK7BC,EAAAA,QAAQ,EAAE,EALmB;AAQ7BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,aAAa,CAACa,SAA9B,EAAyC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxDD,MAAAA,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAArB;AACH,KAFD;AAGH;AAZ4B,CAAD,CAAhC;AAeA,OAAO,MAAM,KAAMX,YAAY,CAACY,OAAzB;AACP,OAAO,MAAMC,WAAW,GAAIL,KAAD,IAAWA,KAAK,CAACM,OAAN,CAAcJ,KAA7C;AAEP,eAAeV,YAAY,CAACe,OAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Tabletop from 'tabletop';\n\nexport const getSpredSheet = createAsyncThunk(\"company/get\", async() => {\n    const res = Tabletop.init({\n        key: '1iQhGbFVfEGXLVzrsbxKi-SwVsXkDWI_XyrrFok8rTdk',\n    })\n    .then((data) => {\n        return data\n    })\n    return res\n})\n\nconst companySlice = createSlice({\n    name: 'company',\n    initialState: {\n     \n    },\n    reducers: {\n    \n    },\n    extraReducers: (builder) => {\n        builder.addCase(getSpredSheet.fulfilled, (state, action) => {\n            state.sheet = action.payload;\n        })\n    }\n})\n\nexport const { } = companySlice.actions;\nexport const selectSheet = (state) => state.company.sheet;\n\nexport default companySlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}