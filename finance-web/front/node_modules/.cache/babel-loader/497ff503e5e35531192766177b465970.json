{"ast":null,"code":"var _jsxFileName = \"/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from './Payment.module.css';\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport ApiService from \"./api\";\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleChange = event => {\n    if (event.error) {\n      setError(event.error.message);\n    } else {\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const card = elements.getElement(CardElement);\n    const {\n      paymentMethod,\n      error\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: card\n    });\n    ApiService.saveStripeInfo({\n      email: email,\n      payment_method_id: paymentMethod.id\n    }).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.all,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.head,\n      children: \"\\u6C7A\\u6E08\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: classes.form_all,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.email_all,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.email_input,\n          id: \"email\",\n          name: \"name\",\n          type: \"email\",\n          placeholder: \"jenny.rosen@example.com\",\n          required: true,\n          value: email,\n          onChange: event => {\n            setEmail(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.credit_all,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"card-element\",\n          children: \"Credit or debit card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          onChange: handleChange,\n          className: classes.card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-errors\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"submit-btn\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"D43dkuAcnHm+jcVwE/9kry9Tyxw=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js"],"names":["React","useState","classes","CardElement","useElements","useStripe","ApiService","Button","Payment","error","setError","email","setEmail","stripe","elements","handleChange","event","message","handleSubmit","preventDefault","card","getElement","paymentMethod","createPaymentMethod","type","saveStripeInfo","payment_method_id","id","then","response","console","log","data","catch","all","head","form_all","email_all","email_input","target","value","credit_all"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,yBAAlD;AACA,OAAOC,UAAP,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACP,KAAV,EAAiB;AACfC,MAAAA,QAAQ,CAACM,KAAK,CAACP,KAAN,CAAYQ,OAAb,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACJ,GAND;;AAQA,QAAMQ,YAAY,GAAG,MAAOF,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAT,CAAoBlB,WAApB,CAAb;AAEA,UAAM;AAACmB,MAAAA,aAAD;AAAgBb,MAAAA;AAAhB,QAAyB,MAAMI,MAAM,CAACU,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DJ,MAAAA,IAAI,EAAEA;AAFsD,KAA3B,CAArC;AAIAd,IAAAA,UAAU,CAACmB,cAAX,CAA0B;AACtBd,MAAAA,KAAK,EAAEA,KADe;AACRe,MAAAA,iBAAiB,EAAEJ,aAAa,CAACK;AADzB,KAA1B,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KAJH,EAIKC,KAJL,CAIWxB,KAAK,IAAI;AAChBqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACH,KAND;AAQH,GAhBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACgC,GAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhC,OAAO,CAACiC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAM,MAAA,QAAQ,EAAEjB,YAAhB;AAA8B,MAAA,SAAS,EAAEhB,OAAO,CAACkC,QAAjD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACmC,SAAxB;AAAA,gCACI;AAAK,UAAA,OAAO,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAEnC,OAAO,CAACoC,WAA1B;AAAuC,UAAA,EAAE,EAAC,OAA1C;AAAkD,UAAA,IAAI,EAAC,MAAvD;AAA8D,UAAA,IAAI,EAAC,OAAnE;AACC,UAAA,WAAW,EAAC,yBADb;AACuC,UAAA,QAAQ,MAD/C;AAEC,UAAA,KAAK,EAAE3B,KAFR;AAEe,UAAA,QAAQ,EAAGK,KAAD,IAAW;AAAEJ,YAAAA,QAAQ,CAACI,KAAK,CAACuB,MAAN,CAAaC,KAAd,CAAR;AAA6B;AAFnE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAEtC,OAAO,CAACuC,UAAxB;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,cAAhB;AAA+B,UAAA,QAAQ,EAAE1B,YAAzC;AAAuD,UAAA,SAAS,EAAEb,OAAO,CAACkB;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,IAAI,EAAC,OAAlC;AAAA,oBAA2CX;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAA6C,UAAA,OAAO,EAAC,WAArD;AAAiE,UAAA,KAAK,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA3DD;;GAAMD,O;UAGaH,S,EACED,W;;;KAJfI,O;AA6DN,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\nimport classes from './Payment.module.css'\nimport {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport ApiService from \"./api\";\nimport Button from '@material-ui/core/Button';\n\nconst Payment = () => {\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleChange = (event) => {\n        if (event.error) {\n          setError(event.error.message);\n        } else {\n          setError(null);\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const card = elements.getElement(CardElement);\n \n        const {paymentMethod, error} = await stripe.createPaymentMethod({\n            type: 'card',\n            card: card\n        });\n        ApiService.saveStripeInfo({\n            email: email, payment_method_id: paymentMethod.id})\n          .then(response => {\n            console.log(response.data);\n          }).catch(error => {\n            console.log(error)\n        })\n        \n    };\n\n\n    return (\n        <div className={classes.all}>\n            <div className={classes.head}>\n                決済\n            </div>\n            <form onSubmit={handleSubmit} className={classes.form_all}>\n                <div className={classes.email_all}>\n                    <div htmlFor=\"email\">Email Address</div>\n                    <input className={classes.email_input} id=\"email\" name=\"name\" type=\"email\" \n                     placeholder=\"jenny.rosen@example.com\" required \n                     value={email} onChange={(event) => { setEmail(event.target.value)}} \n                    />\n                </div>\n                <div className={classes.credit_all}>\n                    <label for=\"card-element\">Credit or debit card</label> \n                    <CardElement id=\"card-element\" onChange={handleChange} className={classes.card}/>\n                    <div className=\"card-errors\" role=\"alert\">{error}</div>\n                </div>\n                <div>\n                    <Button type=\"submit\" className=\"submit-btn\" variant=\"contained\" color=\"primary\">\n                        Submit Payment\n                    </Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}