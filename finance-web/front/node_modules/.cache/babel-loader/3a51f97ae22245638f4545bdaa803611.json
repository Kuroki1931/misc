{"ast":null,"code":"var _jsxFileName = \"/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from './Payment.module.css';\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport ApiService from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleChange = event => {\n    if (event.error) {\n      setError(event.error.message);\n    } else {\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const card = elements.getElement(CardElement);\n    const {\n      paymentMethod,\n      error\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: card\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.all,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.head,\n      children: \"\\u6C7A\\u6E08\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"stripe-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          id: \"email\",\n          name: \"name\",\n          type: \"email\",\n          placeholder: \"jenny.rosen@example.com\",\n          required: true,\n          value: email,\n          onChange: event => {\n            setEmail(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"card-element\",\n          children: \"Credit or debit card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-errors\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"D43dkuAcnHm+jcVwE/9kry9Tyxw=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js"],"names":["React","useState","classes","CardElement","useElements","useStripe","ApiService","Payment","error","setError","email","setEmail","stripe","elements","handleChange","event","message","handleSubmit","preventDefault","card","getElement","paymentMethod","createPaymentMethod","type","all","head","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport classes from './Payment.module.css'\nimport {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport ApiService from \"../api\";\n\nconst Payment = () => {\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleChange = (event) => {\n        if (event.error) {\n          setError(event.error.message);\n        } else {\n          setError(null);\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const card = elements.getElement(CardElement);\n \n        const {paymentMethod, error} = await stripe.createPaymentMethod({\n            type: 'card',\n            card: card\n});\n    };\n\n\n    return (\n        <div className={classes.all}>\n            <div className={classes.head}>\n                決済\n            </div>\n            <form onSubmit={handleSubmit} className=\"stripe-form\">\n                <div className=\"form-row\">\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input className=\"form-input\" id=\"email\" name=\"name\" type=\"email\" placeholder=\"jenny.rosen@example.com\" required \n                    value={email} onChange={(event) => { setEmail(event.target.value)}} />\n                </div>\n                <div className=\"form-row\">\n                    <label for=\"card-element\">Credit or debit card</label> \n                    <CardElement id=\"card-element\" onChange={handleChange}/>\n                    <div className=\"card-errors\" role=\"alert\">{error}</div>\n                </div>\n                <button type=\"submit\" className=\"submit-btn\">\n                Submit Payment\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}