{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axios from\"axios\";var apiUrl=\"http://localhost:8000/\";export var fetchAsyncLogin=createAsyncThunk(\"login/post\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(auth){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"\".concat(apiUrl,\"authen/jwt/create\"),auth,{headers:{\"Content-Type\":\"application/json\"}});case 2:res=_context.sent;return _context.abrupt(\"return\",res.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var fetchAsyncRegister=createAsyncThunk(\"create/post\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(auth){var createData,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:createData=new FormData();createData.append('Email',auth.email);createData.append('password',auth.password);createData.append('Username','all');_context2.next=6;return axios.post(\"\".concat(apiUrl,\"api/create/\"),auth,{headers:{\"Content-Type\":\"application/json\"}});case 6:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());var loginSlice=createSlice({name:\"login\",initialState:{authen:{email:\"\",password:\"\"},isLoginView:true},reducers:{editEmail:function editEmail(state,action){state.authen.email=action.payload;},editPassword:function editPassword(state,action){state.authen.password=action.payload;},toggleMode:function toggleMode(state){state.isLoginView=!state.isLoginView;}},extraReducers:function extraReducers(builder){builder.addCase(fetchAsyncLogin.fulfilled,function(state,action){action.payload.access&&(window.location.href=\"/report/\");});}});var _loginSlice$actions=loginSlice.actions,editEmail=_loginSlice$actions.editEmail,editPassword=_loginSlice$actions.editPassword,toggleMode=_loginSlice$actions.toggleMode;export{editEmail,editPassword,toggleMode};export var selectAuthen=function selectAuthen(state){return state.login.authen;};export var selectIsLoginView=function selectIsLoginView(state){return state.login.isLoginView;};export default loginSlice.reducer;","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/login/loginSlice.js"],"names":["createSlice","createAsyncThunk","axios","apiUrl","fetchAsyncLogin","auth","post","headers","res","data","fetchAsyncRegister","createData","FormData","append","email","password","loginSlice","name","initialState","authen","isLoginView","reducers","editEmail","state","action","payload","editPassword","toggleMode","extraReducers","builder","addCase","fulfilled","access","window","location","href","actions","selectAuthen","login","selectIsLoginView","reducer"],"mappings":"iTAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,MAAM,CAAG,wBAAf,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGH,gBAAgB,CAAC,YAAD,0FAAe,iBAAOI,IAAP,gJAC1CH,CAAAA,KAAK,CAACI,IAAN,WAAcH,MAAd,sBAAyCE,IAAzC,CAA+C,CAC/DE,OAAO,CAAE,CACP,eAAgB,kBADT,CADsD,CAA/C,CAD0C,QACtDC,GADsD,+CAMrDA,GAAG,CAACC,IANiD,wDAAf,+DAAxC,CASP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGT,gBAAgB,CAChD,aADgD,2FAEhD,kBAAOI,IAAP,yIACQM,UADR,CACqB,GAAIC,CAAAA,QAAJ,EADrB,CAEED,UAAU,CAACE,MAAX,CAAkB,OAAlB,CAA2BR,IAAI,CAACS,KAAhC,EACAH,UAAU,CAACE,MAAX,CAAkB,UAAlB,CAA8BR,IAAI,CAACU,QAAnC,EACAJ,UAAU,CAACE,MAAX,CAAkB,UAAlB,CAA8B,KAA9B,EAJF,uBAKoBX,CAAAA,KAAK,CAACI,IAAN,WAAcH,MAAd,gBAAmCE,IAAnC,CAAyC,CACzDE,OAAO,CAAE,CACP,eAAgB,kBADT,CADgD,CAAzC,CALpB,QAKQC,GALR,iDAUSA,GAAG,CAACC,IAVb,0DAFgD,iEAA3C,CAgBP,GAAMO,CAAAA,UAAU,CAAGhB,WAAW,CAAC,CAC7BiB,IAAI,CAAE,OADuB,CAE7BC,YAAY,CAAE,CACZC,MAAM,CAAE,CACNL,KAAK,CAAE,EADD,CAENC,QAAQ,CAAE,EAFJ,CADI,CAKZK,WAAW,CAAE,IALD,CAFe,CAS7BC,QAAQ,CAAE,CACRC,SADQ,oBACEC,KADF,CACSC,MADT,CACiB,CACvBD,KAAK,CAACJ,MAAN,CAAaL,KAAb,CAAqBU,MAAM,CAACC,OAA5B,CACD,CAHO,CAIRC,YAJQ,uBAIKH,KAJL,CAIYC,MAJZ,CAIoB,CAC1BD,KAAK,CAACJ,MAAN,CAAaJ,QAAb,CAAwBS,MAAM,CAACC,OAA/B,CACD,CANO,CAORE,UAPQ,qBAOGJ,KAPH,CAOU,CAChBA,KAAK,CAACH,WAAN,CAAoB,CAACG,KAAK,CAACH,WAA3B,CACD,CATO,CATmB,CAoB7BQ,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgB1B,eAAe,CAAC2B,SAAhC,CAA2C,SAACR,KAAD,CAAQC,MAAR,CAAmB,CAC5DA,MAAM,CAACC,OAAP,CAAeO,MAAf,GAA0BC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,UAAjD,EACD,CAFD,EAGD,CAxB4B,CAAD,CAA9B,C,wBA0BuDnB,UAAU,CAACoB,O,CAAnDd,S,qBAAAA,S,CAAWI,Y,qBAAAA,Y,CAAcC,U,qBAAAA,U,2CACxC,MAAO,IAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACd,KAAD,QAAWA,CAAAA,KAAK,CAACe,KAAN,CAAYnB,MAAvB,EAArB,CACP,MAAO,IAAMoB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAChB,KAAD,QAAWA,CAAAA,KAAK,CAACe,KAAN,CAAYlB,WAAvB,EAA1B,CAEP,cAAeJ,CAAAA,UAAU,CAACwB,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst apiUrl = \"http://localhost:8000/\";\n\nexport const fetchAsyncLogin = createAsyncThunk(\"login/post\", async (auth) => {\n  const res = await axios.post(`${apiUrl}authen/jwt/create`, auth, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return res.data;\n});\n\nexport const fetchAsyncRegister = createAsyncThunk(\n  \"create/post\",\n  async (auth) => {\n    const createData = new FormData();\n    createData.append('Email', auth.email)\n    createData.append('password', auth.password)\n    createData.append('Username', 'all')\n    const res = await axios.post(`${apiUrl}api/create/`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    authen: {\n      email: \"\",\n      password: \"\",\n    },\n    isLoginView: true,\n  },\n  reducers: {\n    editEmail(state, action) {\n      state.authen.email = action.payload;\n    },\n    editPassword(state, action) {\n      state.authen.password = action.payload;\n    },\n    toggleMode(state) {\n      state.isLoginView = !state.isLoginView;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      action.payload.access && (window.location.href = \"/report/\");\n    });\n  },\n});\nexport const { editEmail, editPassword, toggleMode } = loginSlice.actions;\nexport const selectAuthen = (state) => state.login.authen;\nexport const selectIsLoginView = (state) => state.login.isLoginView;\n\nexport default loginSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}