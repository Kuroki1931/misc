{"ast":null,"code":"var _jsxFileName = \"/Users/kurokiso/Desktop/ut_finace/finance_web/git/front/src/features/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./Login.module.css\";\nimport { editEmail, editPassword, toggleMode, fetchAsyncLogin, fetchAsyncRegister, selectAuthen, selectIsLoginView } from \"./loginSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const authen = useSelector(selectAuthen);\n  const isLoginView = useSelector(selectIsLoginView);\n  const btnDisabler1 = authen.email === \"\" || authen.password === \"\";\n\n  const login = async () => {\n    if (isLoginView) {\n      await dispatch(fetchAsyncLogin(authen));\n    } else {\n      const result = await dispatch(fetchAsyncRegister(authen));\n\n      if (fetchAsyncRegister.fulfilled.match(result)) {\n        await dispatch(fetchAsyncLogin(authen));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.containerLogin,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.appLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLoginView ? \"Login\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: styles.inputLog,\n        name: \"username\",\n        placeholder: \"\",\n        onChange: e => dispatch(editEmail(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: styles.inputLog,\n        name: \"password\",\n        placeholder: \"\",\n        onChange: e => dispatch(editPassword(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.switch,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: btnDisabler1,\n          color: \"primary\",\n          onClick: login,\n          children: isLoginView ? \"Login\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.switchText,\n        onClick: () => dispatch(toggleMode()),\n        children: isLoginView ? \"Create Account ?\" : \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"MRziRFJnL0CJgCt/908Nk24ReOo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/git/front/src/features/login/Login.js"],"names":["React","Button","useSelector","useDispatch","styles","editEmail","editPassword","toggleMode","fetchAsyncLogin","fetchAsyncRegister","selectAuthen","selectIsLoginView","Login","dispatch","authen","isLoginView","btnDisabler1","email","password","login","result","fulfilled","match","containerLogin","appLogin","inputLog","e","target","value","switch","switchText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./Login.module.css\";\n\nimport {\n  editEmail,\n  editPassword,\n  toggleMode,\n  fetchAsyncLogin,\n  fetchAsyncRegister,\n  selectAuthen,\n  selectIsLoginView,\n} from \"./loginSlice\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const authen = useSelector(selectAuthen);\n  const isLoginView = useSelector(selectIsLoginView);\n  const btnDisabler1 = authen.email === \"\" || authen.password === \"\";\n\n\n  const login = async () => {\n    if (isLoginView) {\n      await dispatch(fetchAsyncLogin(authen));\n    } else {\n      const result = await dispatch(fetchAsyncRegister(authen));\n\n      if (fetchAsyncRegister.fulfilled.match(result)) {\n        await dispatch(fetchAsyncLogin(authen));\n      }\n    }\n  };\n\n  return (\n    <div className={styles.containerLogin}>\n      <div className={styles.appLogin}>\n        <h1>{isLoginView ? \"Login\" : \"Register\"}</h1>\n        <span>Email</span>\n        <input\n          type=\"text\"\n          className={styles.inputLog}\n          name=\"username\"\n          placeholder=\"\"\n          onChange={(e) => dispatch(editEmail(e.target.value))}\n          required\n        />\n        <span>Password</span>\n        <input\n          type=\"password\"\n          className={styles.inputLog}\n          name=\"password\"\n          placeholder=\"\"\n          onChange={(e) => dispatch(editPassword(e.target.value))}\n          required\n        />\n        <div className={styles.switch}>\n          <Button\n            variant=\"contained\"\n            disabled={btnDisabler1}\n            color=\"primary\"\n            onClick={login}\n          >\n            {isLoginView ? \"Login\" : \"Create\"}\n          </Button>\n        </div>\n        <span\n          className={styles.switchText}\n          onClick={() => dispatch(toggleMode())}\n        >\n          {isLoginView ? \"Create Account ?\" : \"Back to Login\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}