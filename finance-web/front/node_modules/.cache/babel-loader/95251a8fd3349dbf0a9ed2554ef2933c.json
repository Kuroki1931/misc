{"ast":null,"code":"var _jsxFileName = \"/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from './Payment.module.css';\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleChange = event => {\n    if (event.error) {\n      setError(event.error.message);\n    } else {\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const card = elements.getElement(CardElement); // add these lines\n\n    const {\n      paymentMethod,\n      error\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: card\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"stripe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        id: \"email\",\n        name: \"name\",\n        type: \"email\",\n        placeholder: \"jenny.rosen@example.com\",\n        required: true,\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"card-element\",\n        children: \"Credit or debit card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-errors\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Submit Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Payment, \"D43dkuAcnHm+jcVwE/9kry9Tyxw=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/kurokiso/Desktop/ut_finace/finance_web/new_git/finance_web/front/src/features/payment/Payment.js"],"names":["React","useState","classes","CardElement","useElements","useStripe","Payment","error","setError","email","setEmail","stripe","elements","handleChange","event","message","handleSubmit","preventDefault","card","getElement","paymentMethod","createPaymentMethod","type","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,yBAAlD;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACP,KAAV,EAAiB;AACfC,MAAAA,QAAQ,CAACM,KAAK,CAACP,KAAN,CAAYQ,OAAb,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACJ,GAND;;AAQA,QAAMQ,YAAY,GAAG,MAAOF,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAT,CAAoBhB,WAApB,CAAb,CAFkC,CAIlC;;AACA,UAAM;AAACiB,MAAAA,aAAD;AAAgBb,MAAAA;AAAhB,QAAyB,MAAMI,MAAM,CAACU,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DJ,MAAAA,IAAI,EAAEA;AAFsD,KAA3B,CAArC;AAIH,GATD;;AAYA,sBAEQ;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,SAAS,EAAC,aAAxC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,EAAE,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,WAAW,EAAC,yBAAjF;AAA2G,QAAA,QAAQ,MAAnH;AACA,QAAA,KAAK,EAAEP,KADP;AACc,QAAA,QAAQ,EAAGK,KAAD,IAAW;AAAEJ,UAAAA,QAAQ,CAACI,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAR;AAA6B;AADlE;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAEX;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAC,OAAlC;AAAA,kBAA2CN;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAmBH,CA7CD;;GAAMD,O;UAGaD,S,EACED,W;;;KAJfE,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\nimport classes from './Payment.module.css'\nimport {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\n\nconst Payment = () => {\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleChange = (event) => {\n        if (event.error) {\n          setError(event.error.message);\n        } else {\n          setError(null);\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const card = elements.getElement(CardElement);\n \n        // add these lines\n        const {paymentMethod, error} = await stripe.createPaymentMethod({\n            type: 'card',\n            card: card\n});\n    };\n\n\n    return (\n        \n            <form onSubmit={handleSubmit} className=\"stripe-form\">\n                <div className=\"form-row\">\n                <label htmlFor=\"email\">Email Address</label>\n                <input className=\"form-input\" id=\"email\" name=\"name\"    type=\"email\" placeholder=\"jenny.rosen@example.com\" required \n                value={email} onChange={(event) => { setEmail(event.target.value)}} />\n                </div>\n                <div className=\"form-row\">\n                <label for=\"card-element\">Credit or debit card</label> \n                <CardElement id=\"card-element\" onChange={handleChange}/>\n                <div className=\"card-errors\" role=\"alert\">{error}</div>\n                </div>\n                <button type=\"submit\" className=\"submit-btn\">\n                Submit Payment\n                </button>\n            </form>\n       \n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}